{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.route.ts","webpack:///./src/app/groups/groups.component.css","webpack:///./src/app/groups/groups.component.html","webpack:///./src/app/groups/groups.component.ts","webpack:///./src/app/groups/member/member.component.css","webpack:///./src/app/groups/member/member.component.html","webpack:///./src/app/groups/member/member.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/posts.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,8KAA8K,SAAS,8c;;;;;;;;;;;;;;;;;;;;;;;;;;ACArI;AACH;AACC;AAQhD;IAQE,sBAAoB,WAA0B;QAA1B,gBAAW,GAAX,WAAW,CAAe;QAP9C,UAAK,GAAG,KAAK,CAAC;QACd,aAAQ,GAAC,IAAI,CAAC;QACd,qBAAgB,GAAC,KAAK,CAAC;QACvB,QAAG,GAAC,IAAI,CAAC;QACT,YAAO,GAAC,EAAE,CAAC;QACX,WAAM,GAAC,EAAE,CAAC;IAEwC,CAAC;IAEnD,+BAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE;QACnB,oEAAoE;QAGpE,+BAA+B;QAC/B,+BAA+B;QAC/B,uBAAuB;QACvB,qBAAqB;QACrB,8BAA8B;QAC9B,kBAAkB;IAIpB,CAAC;IAED,mCAAY,GAAZ;QAAA,iBAcC;QAbC,IAAI,MAAM,GAAoB,IAAI,6DAAe,EAAE,CAAC;QACpD,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;aAChC,SAAS,CAAE,aAAG;YAAK,KAAI,CAAC,QAAQ,GAAC,GAAG,CAAC,OAAO,CAAC;YAC9C,KAAI,CAAC,GAAG,GAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACtB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,GAAG,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACxC,KAAI,CAAC,MAAM,GAAC,KAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YACvC,qBAAqB;YACrB,+BAA+B;YAC/B,6BAA6B;QACjC,CAAC,EAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAE;IAE7B,CAAC;IACD,uFAAuF;IACvF,iBAAiB;IACjB,4DAA4D;IAC5D,2EAA2E;IAC3E,6DAA6D;IAC7D,8CAA8C;IAC9C,8CAA8C;IAC9C,2DAA2D;IAC3D,qCAAqC;IACrC,oCAAoC;IACpC,IAAI;IAEJ,4CAA4C;IAC5C,qCAAc,GAAd;QAAA,iBAmDC;QAlDC,IAAI,OAAO,CAAC;QACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,GAAG,GAAE;YACP,SAAS,EAAG,IAAI,CAAC,OAAO;SACzB;QACD,cAAc;QACd,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC;aAC9B,SAAS,CAAE,aAAG;YACb,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAC,OAAO,CAAC;YAClD,gBAAgB;YAChB,IAAI,WAAW,CAAC;YAChB,EAAE,EAAC,OAAO,IAAE,IAAI,CAAC,EAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBAC5B,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;qBAC3C,SAAS,CAAE,aAAG;oBACP,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;oBACvC,OAAO,CAAC,GAAG,CAAC,OAAO,WAAW,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBACzB,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM;oBAC3C,OAAO,CAAC,GAAG,CAAC,uCAAuC,GAAC,WAAW,CAAC;oBAChE,WAAW,GAAG,WAAW,GAAC,CAAC;oBAC3B,oBAAoB;oBACpB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC;oBACzB,IAAI,MAAM,GAAC,KAAI,CAAC,GAAG,CAAC,GAAG,EAAC,4BAA4B;oBACpD,IAAI,WAAW,GAAC;wBACd,KAAK,EAAG,OAAO;wBACf,KAAK,EAAG,MAAM;wBACd,KAAK,EAAG,WAAW;qBACpB;oBACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;oBAC7B,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,WAAW,CAAC;yBAC3C,SAAS,CAAE,aAAG;wBACb,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;wBAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACb,IAAI,IAAI,GAAG;4BACT,IAAI,EAAC,KAAI,CAAC,gBAAgB;4BAC1B,KAAK,EAAC,OAAO;yBACd;wBACD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC;6BACjC,SAAS,CAAE,aAAG;4BAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;4BACnC,KAAI,CAAC,YAAY,EAAE;4BACnB,KAAI,CAAC,OAAO,GAAC,EAAE,CAAC;wBAClB,CAAC,EAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC;oBAChC,CAAC,EAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC;gBAEpC,CAAC,EAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAC1B;YACT,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAzGU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCASkC,2DAAY;OARnC,YAAY,CA0GxB;IAAD,mBAAC;CAAA;AA1GwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACyB;AAEnB;AACa;AACrB;AACK;AACgB;AACO;AAkBnE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,wEAAe;gBACf,+EAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oDAAS;gBACT,wDAAU;gBACV,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AC3BmB;AACqB;AACf;AAK/C,IAAM,QAAQ,GAAY;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAG,2DAAY,EAAG,SAAS,EAAC,MAAM,EAAE;IACzD,+DAA+D;IAC/D,sEAAsE;CAEzE;AASD;IAAA;IAEA,CAAC;IAFY,SAAS;QAPrB,8DAAQ,CAAC;YACT,OAAO,EAAG;gBACN,4DAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;aACjC;YACD,OAAO,EAAG,CAAC,4DAAY,CAAC;SACxB,CAAC;OAEW,SAAS,CAErB;IAAD,gBAAC;CAAA;AAFqB;;;;;;;;;;;;ACrBtB,mB;;;;;;;;;;;ACAA,6ZAA6Z,iBAAiB,2KAA2K,IAAI,qEAAqE,IAAI,qH;;;;;;;;;;;;;;;;;;;;;;;;;ACAlmB;AACpB;AAShD;IAGE,yBAAoB,WAA0B;QAA1B,gBAAW,GAAX,WAAW,CAAe;IAAI,CAAC;IAEnD,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,qCAAW,GAAX;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC3B,SAAS,CACN,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAC/C,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACzB;IACP,CAAC;IAlBQ;QAAR,2DAAK,EAAE;;iDAAK;IADF,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAIkC,2DAAY;OAHnC,eAAe,CAqB3B;IAAD,sBAAC;CAAA;AArB2B;;;;;;;;;;;;ACV5B,mB;;;;;;;;;;;ACAA,qmB;;;;;;;;;;;;;;;;;;;;;;;;ACAoE;AAOpE;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IAED,qCAAW,GAAX;QACE,4BAA4B;IAC9B,CAAC;IARQ;QAAR,2DAAK,EAAE;;oDAAQ;IADL,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAW3B;IAAD,sBAAC;CAAA;AAX2B;;;;;;;;;;;;ACP5B,mB;;;;;;;;;;;ACAA,87B;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACPe;AACU;AAKrD;IAEE,sBAAoB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAElC,kCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEjC,CAAC;IAED,sCAAe,GAAf,UAAgB,MAAM;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IAED,qCAAc,GAAd,UAAe,IAAI;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,uCAAgB,GAAhB;QACE,IAAI,IAAI,GAAC;YACP,IAAI,EAAC,SAAS;YACd,OAAO,EAAC,SAAS;SAClB;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,kCAAW,GAAX,UAAY,OAAO;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAC,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,mCAAY,GAAZ,UAAa,MAAsB;QACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAC,EAAG,MAAM,UAAE,CAAC,CAAC;IACtD,CAAC;IAED,kCAAW,GAAX,UAAY,IAAI;QAEd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAGD,kCAAW,GAAX,UAAY,OAAO;QACjB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAC,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,gCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IACzC,CAAC;IAED,kCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACxC,CAAC;IAnDU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGyB,kDAAI;OAFlB,YAAY,CAqDxB;IAAD,mBAAC;CAAA;AArDwB;;;;;;;;;;;;;;ACNzB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<!-- <div>\\n    <app-groups></app-groups>\\n</div> -->\\n<div class=\\\"container\\\">\\n      <div class=\\\"row col-xs-2\\\">\\n        <label for=\\\"groupName\\\">Enter Group Name</label>\\n          <input id=\\\"groupName\\\" type=\\\"text\\\" [(ngModel)]=\\\"grpName\\\"><br><br>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createNewGroup()\\\" >Create Group</button>\\n      </div>\\n</div>\\n\\n<app-groups [grps]=\\\"groups\\\"></app-groups>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PostsService } from './posts.service';\nimport { URLSearchParams } from '@angular/http';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'app';\n  grpArray=null;\n  loggedInUserName='ram';\n  usr=null;\n  grpName=\"\";\n  groups=[];\n\n  constructor(private postService : PostsService) { }\n\n  ngOnInit(){\n    this.getUsrGroups()\n    //var loggedInUser = this.loggedInUserName; //will come from session\n    \n    \n    //Setting up data for the users\n    // this.postService.setupData()\n    // .subscribe( res => {\n    //   console.log(res)\n    // },err => console.log(err) )\n    //Creating groups \n\n    \n\n  }\n\n  getUsrGroups(){\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('userName', this.loggedInUserName);\n    this.postService.getUSersGrps(params)\n        .subscribe( res => {this.grpArray=res['_body']\n        this.usr=res['_body']; \n        this.usr = JSON.parse(this.usr)\n        console.log(this.usr[\"memberOfGroups\"]);\n        this.groups=this.usr[\"memberOfGroups\"];\n        //this.partOfGroup();\n        // console.log(usd._id);       \n        // console.log(this.grpArray)\n    },err => console.log(err) )\n\n  }\n  // //This function will return the group ids for which logged-In user is a member/admin\n  // partOfGroup(){\n  //       //Get the logged in user name to display the groups\n  //       var loggedInUser = this.loggedInUserName; //will come from session\n  //       let params: URLSearchParams = new URLSearchParams();\n  //       params.set('userName', loggedInUser);\n  //       this.postService.getUSersGrps(params)\n  //           .subscribe( res => {this.grpArray=res['_body']\n  //         console.log(this.grpArray)\n  //       },err => console.log(err) )\n  // }\n\n  //Create Group add current user to the group\n  createNewGroup(){\n    let groupId;\n    console.log(this.grpName);\n    var grp ={\n      groupName : this.grpName\n    }\n    //Grp Creation\n    this.postService.createGroup(grp)\n      .subscribe( res => {\n        groupId = res['_body'];\n        console.log(\"Grp created with groupId : \"+groupId)\n        //add usr to grp\n        let countMemGrp;\n        if(groupId!=null){\n          console.log(\"groupId is not null\")\n                this.postService.countMemGrp(groupId.trim())\n                .subscribe( res => {\n                        countMemGrp = JSON.parse(res[\"_body\"]);\n                        console.log(typeof countMemGrp)\n                        console.log(countMemGrp);\n                        countMemGrp = countMemGrp['members'].length\n                        console.log(\"Number of members present in the grp \"+countMemGrp)\n                        countMemGrp = countMemGrp+1\n                        //return countMemGrp\n                        console.log(this.usr._id)\n                        var userId=this.usr._id //will get this from session\n                        var insertToGrp={\n                          grpId : groupId,\n                          usrID : userId,\n                          seqNo : countMemGrp\n                        } \n                        console.log(\"adding user to group\")\n                              this.postService.addUserToGroup(insertToGrp)\n                              .subscribe( res => {\n                                console.log(\"add group to user\")\n                                console.log(res);\n                                    let data = {\n                                      name:this.loggedInUserName,\n                                      grpId:groupId\n                                    }\n                                    this.postService.addGrpToUsr(data)\n                                    .subscribe( res => { console.log(res)\n                                      this.getUsrGroups()\n                                      this.grpName=\"\";\n                                    },err => console.log(err))\n                              },err => console.log(err))\n                      \n                    },err => console.log(err)\n                  )\n          }\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { GroupsComponent } from './groups/groups.component';\nimport { AppRouter} from './app.route';\nimport {  HttpModule } from '@angular/http';\nimport { HeaderComponent } from './header/header.component';\nimport { MemberComponent } from './groups/member/member.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GroupsComponent,\n    HeaderComponent,\n    MemberComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRouter,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from \"@angular/core\";\r\nimport { Route, Routes, RouterModule } from \"@angular/router\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { GroupsComponent } from \"./groups/groups.component\";\r\n\r\n\r\n\r\nconst appRoute : Routes = [\r\n    { path :'' ,component : AppComponent , pathMatch:'full' }\r\n    // { path : '' , redirectTo : 'groups' , pathMatch:'full'  },  \r\n    // { path :'groups' ,component : GroupsComponent , pathMatch:'full' },\r\n\r\n]\r\n\r\n@NgModule({\r\n imports : [\r\n     RouterModule.forRoot(appRoute)\r\n ],\r\n exports : [RouterModule]\r\n})\r\n\r\nexport class AppRouter{\r\n\r\n}","module.exports = \"\"","module.exports = \"\\n<!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Primary</button> -->\\n<div>\\n    <h3>Groups</h3>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"list-group\\\">\\n        <div *ngFor=\\\"let usr of grps\\\">\\n            <a class=\\\"list-group-item\\\" style=\\\"cursor: pointer\\\">\\n              <h4 class=\\\"list-group-item-heading\\\">{{ usr.groupName }}</h4>\\n              <hr>\\n              <app-member></app-member>\\n              <!-- <div class=\\\"row\\\">\\n                  <p class=\\\"list-group-item-text col-md-4\\\">{{  }}</p>\\n                  <p class=\\\"list-group-item-text col-md-4\\\">{{  }}</p>\\n              </div> -->\\n            </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PostsService } from '../posts.service';\nimport { URLSearchParams } from '@angular/http';\n\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit,OnChanges {\n  @Input() grps\n  \n  constructor(private postService : PostsService) { }\n\n  ngOnInit() {\n    this.getAllUsers();\n  }\n\n  ngOnChanges(){\n    console.log(this.grps);\n  }\n\n  getAllUsers(){\n    this.postService.getallUsers()\n      .subscribe(\n          res => { console.log(JSON.parse(res[\"_body\"])) }\n          ,err => console.log(err) \n        )\n  }\n  \n}","module.exports = \"\"","module.exports = \"<p>\\n  member works!\\n</p>\\n\\n\\n<div class=\\\"container\\\">\\n    <p>Add Member:\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\">\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span> \\n      </button>\\n    </p>\\n    <p>Remove a Member:\\n        <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\">\\n          <span class=\\\"glyphicon glyphicon-remove\\\"></span> \\n        </button>\\n    </p>\\n    <p>Delete Group:\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\">\\n        <span class=\\\"glyphicon glyphicon-trash\\\"></span> \\n      </button>\\n    </p>\\n</div>\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-member',\n  templateUrl: './member.component.html',\n  styleUrls: ['./member.component.css']\n})\nexport class MemberComponent implements OnInit,OnChanges  {\n  @Input() members\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(){\n    //console.log(this.members);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">WebSiteName</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li class=\\\"active\\\"><a href=\\\"#\\\">Home</a></li>\\n      <li class=\\\"dropdown\\\"><a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\">Page 1 <span class=\\\"caret\\\"></span></a>\\n        <ul class=\\\"dropdown-menu\\\">\\n          <li><a href=\\\"#\\\">Page 1-1</a></li>\\n          <li><a href=\\\"#\\\">Page 1-2</a></li>\\n          <li><a href=\\\"#\\\">Page 1-3</a></li>\\n        </ul>\\n      </li>\\n      <li><a href=\\\"#\\\">Page 2</a></li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a href=\\\"/signup\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n      <li><a href=\\\"/login\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</a></li>\\n    </ul>\\n  </div>\\n</nav>\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http,URLSearchParams } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private http:Http) { }\n\n  getAllPosts() {\n    return this.http.get('/posts');\n    \n  }\n\n  saveUserDetails(params){\n    return this.http.post('/api/SaveUser',params);\n  }\n\n  addUserToGroup(data){\n    return this.http.post('/api/addUser', data);\n  }\n\n  removeUsrFromGrp(){\n    var data={\n      name:\"abcName\",\n      address:\"abcAddr\"\n    }\n    return this.http.post('/api/remUsrFrmGrp',data);\n  }\n\n  createGroup(grpData){\n    return this.http.post('/api/createGroup',grpData);\n  }\n\n  getUSersGrps(params:URLSearchParams){\n    console.log(params);\n    return this.http.get('/api/getUsrGrps',{  params });\n  }\n\n  addGrpToUsr(data){\n\n    return this.http.post('/api/addGrpToUsr',data);\n  }\n\n\n  countMemGrp(groupId){\n    console.log(groupId)\n    return this.http.get('/api/memCountGRp/'+groupId);\n  }\n\n  setupData(){\n    return this.http.get('/api/setupdata');\n  }\n\n  getallUsers(){\n    return this.http.get('/api/allUsers');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}